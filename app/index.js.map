{
  "version": 3,
  "sources": ["../src/main/index.ts"],
  "sourcesContent": ["import { app, BrowserWindow } from \"electron\";\nimport path from \"node:path\";\n\nconst createWindow = () => {\n  // Create the browser window.\n  const mainWindow = new BrowserWindow({\n    width: 800,\n    height: 600,\n  });\n\n  // and load the index.html of the app.\n  const url = `file://${path.resolve(__dirname, \"./renderer/index.html\")}`;\n  mainWindow.loadURL(url);\n\n  // Open the DevTools.\n  // mainWindow.webContents.openDevTools()\n};\n\n// This method will be called when Electron has finished\n// initialization and is ready to create browser windows.\n// Some APIs can only be used after this event occurs.\napp.whenReady().then(() => {\n  createWindow();\n\n  app.on(\"activate\", () => {\n    // On macOS it's common to re-create a window in the app when the\n    // dock icon is clicked and there are no other windows open.\n    if (BrowserWindow.getAllWindows().length === 0) createWindow();\n  });\n});\n\n// Quit when all windows are closed, except on macOS. There, it's common\n// for applications and their menu bar to stay active until the user quits\n// explicitly with Cmd + Q.\napp.on(\"window-all-closed\", () => {\n  //   if (process.platform !== \"darwin\")\n  app.quit();\n});\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;AAAA,sBAAmC;AACnC,uBAAiB;AAEjB,IAAM,eAAe,MAAM;AAEzB,QAAM,aAAa,IAAI,8BAAc;AAAA,IACnC,OAAO;AAAA,IACP,QAAQ;AAAA,EACV,CAAC;AAGD,QAAM,MAAM,UAAU,iBAAAA,QAAK,QAAQ,WAAW,uBAAuB;AACrE,aAAW,QAAQ,GAAG;AAIxB;AAKA,oBAAI,UAAU,EAAE,KAAK,MAAM;AACzB,eAAa;AAEb,sBAAI,GAAG,YAAY,MAAM;AAGvB,QAAI,8BAAc,cAAc,EAAE,WAAW;AAAG,mBAAa;AAAA,EAC/D,CAAC;AACH,CAAC;AAKD,oBAAI,GAAG,qBAAqB,MAAM;AAEhC,sBAAI,KAAK;AACX,CAAC;",
  "names": ["path"]
}
